# Default configuration file for the Linux (deb/rpm) and Windows MSI collector packages

# If the collector is installed without the Linux/Windows installer script, the following
# environment variables are required to be manually defined or configured below:
# - SPLUNK_ACCESS_TOKEN: The Splunk access token to authenticate requests
# - SPLUNK_API_URL: The Splunk API URL, e.g. https://api.us0.signalfx.com
# - SPLUNK_BUNDLE_DIR: The path to the Smart Agent bundle, e.g. /usr/lib/splunk-otel-collector/agent-bundle
# - SPLUNK_COLLECTD_DIR: The path to the collectd config directory for the Smart Agent, e.g. /usr/lib/splunk-otel-collector/agent-bundle/run/collectd
# - SPLUNK_HEC_TOKEN: The Splunk HEC authentication token
# - SPLUNK_HEC_URL: The Splunk HEC endpoint URL, e.g. https://ingest.us0.signalfx.com/v1/log
# - SPLUNK_INGEST_URL: The Splunk ingest URL, e.g. https://ingest.us0.signalfx.com
# - SPLUNK_LISTEN_INTERFACE: The network interface the agent receivers listen on.

receivers:
  postgresql:
    endpoint: localhost:5432
    transport: tcp
    username: "{{ postgres_gogs_user_name }}"
    password: "{{ postgres_gogs_user_password }}"
    databases:
      - "{{ postgres_gogs_db_name }}"
    collection_interval: 10s
    tls:
      insecure: false
      insecure_skip_verify: true
    query_sample_collection:
      enabled: false 
    top_query_collection:
      enabled: true
      top_n_query: 1000

  filelog:
    include: [ /var/log/postgresql/*.log ]
    operators:
      - type: regex_parser
        regex: '^(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) UTC \[\d+\] (?P<user>[^\s]+) (?P<sev>[A-Z]+):\s+(?P<msg>.*)$'
        timestamp:
          parse_from: attributes.time
          layout: '%Y-%m-%d %H:%M:%S'
        severity:
          parse_from: attributes.sev

  hostmetrics:
    collection_interval: 5s
    scrapers:
      cpu:
      load:
      memory:
      disk:
      network:

processors:
  batch:
    timeout: 5s
    send_batch_size: 100

  memory_limiter:
    check_interval: 2s
    limit_mib: 200   
    spike_limit_mib: 50

  resourcedetection:
    detectors:
      - system
    system:
      hostname_sources:
        - os

exporters:
  splunk_hec/logs:
    token: "${SPLUNK_HEC_TOKEN}"
    endpoint: "${SPLUNK_HEC_URL}"
    source: "otel"
    index: "psql_logs"
    sourcetype: "otel"
    tls:
      insecure_skip_verify: true

  splunk_hec/metrics:
    token: "${SPLUNK_HEC_TOKEN}"
    endpoint: "${SPLUNK_HEC_URL}"
    source: "otel"
    index: "psql_metrics"
    sourcetype: "otel"
    tls:
      insecure_skip_verify: true

  splunk_hec/traces:
    token: "${SPLUNK_HEC_TOKEN}"
    endpoint: "${SPLUNK_HEC_URL}"
    source: "otel"
    index: "psql_traces"
    sourcetype: "otel"
    tls:
      insecure_skip_verify: true

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [resourcedetection, memory_limiter, batch]
      exporters: [splunk_hec/logs]
    metrics:
      receivers: [hostmetrics, postgresql]
      processors: [resourcedetection, memory_limiter, batch]
      exporters: [splunk_hec/metrics]
    # traces:
    #   receivers: [otlp]
    #   processors: [resourcedetection, memory_limiter, batch]
    #   exporters: [splunk_hec/traces]
