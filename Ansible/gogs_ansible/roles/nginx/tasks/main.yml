---
# tasks file for nginx
- name: Install required packages
  apt:
    name:
      - curl
      - gnupg2
      - ca-certificates
      - lsb-release
      - ubuntu-keyring
    state: present
    update_cache: yes

- name: Download and add Nginx signing key
  ansible.builtin.apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present
    keyring: /usr/share/keyrings/nginx-archive-keyring.gpg

- name: Add Nginx repository (stable)
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_distribution_release }} nginx"
    filename: nginx
    state: present

- name: Pin Nginx packages from nginx.org
  copy:
    dest: /etc/apt/preferences.d/99nginx
    content: |
      Package: *
      Pin: origin nginx.org
      Pin: release o=nginx
      Pin-Priority: 900

- name: Update APT cache
  apt:
    update_cache: yes

- name: Install Nginx
  apt:
    name: nginx
    state: present

- name: Check if default nginx config exists
  ansible.builtin.stat:
    path: /etc/nginx/conf.d/default.conf
  register: default_nginx_conf

- name: Rename default nginx config
  ansible.builtin.copy:
    src: /etc/nginx/conf.d/default.conf
    dest: /etc/nginx/conf.d/default.conf.disabled
    remote_src: yes
  when: default_nginx_conf.stat.exists

- name: Remove original default nginx config
  ansible.builtin.file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  when: default_nginx_conf.stat.exists

- name: Collect gogs IPs from inventory
  set_fact:
    gogs_ips: "{{ groups['gogs'] }}"

- name: Deploy custom gogs.conf
  ansible.builtin.template:
    src: gogs.conf.j2
    dest: "/etc/nginx/conf.d/gogs.conf"
    owner: root
    group: root
  notify: Restart Nginx
