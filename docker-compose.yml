services:
  splunk:
    image: splunk/splunk:9.4
    container_name: splunk
    expose:
      - "8088"
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - splunk_var:/opt/splunk/var
      - splunk_etc:/opt/splunk/etc
    networks:
      - gogs_network

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - gogs_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    container_name: otel-collector
    restart: unless-stopped
    env_file:
      - .env
    user: "0:0"
    volumes:
      - ./configs/otel/config.yaml:/etc/otelcol-contrib/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - "--config=/etc/otelcol-contrib/config.yaml"
    expose:
      - "4317"
      - "4318"
    networks:
      - gogs_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  nginx:
    image: nginx:1.27.5-alpine-otel
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/gogs.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - gogs1
      - gogs2
    networks:
      - gogs_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  gogs1:
    image: gogs-dev:latest
    container_name: gogs-1
    restart: unless-stopped
    privileged: true
    expose:
      - 3000
    ports:
      - "22:22"
    env_file:
      - .env
    environment:
      OTEL_HOST_NAME: gogs
    volumes:
      - ./data/gogs:/data
    depends_on:
      - db
    networks:
      - gogs_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"
  gogs2:
    image: gogs-dev:latest
    container_name: gogs-2
    restart: unless-stopped
    privileged: true
    expose:
      - 3000
    environment:
      OTEL_HOST_NAME: gogs
    env_file:
      - .env
    volumes:
      - ./data/gogs:/data
    depends_on:
      - db
    networks:
      - gogs_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

  db:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./data/psql:/var/lib/postgresql/data
      - ./configs/psql/:/docker-entrypoint-initdb.d
    networks:
      - gogs_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"

networks:
  gogs_network:
    driver: bridge

volumes:
  splunk_var:
  splunk_etc:
