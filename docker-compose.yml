services:
  splunk:
    image: splunk/splunk
    container_name: splunk
    ports:
      - "8000:8000"
      - "8088:8088"
    environment:
      - SPLUNK_PASSWORD=12345678
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_IGNORE_FILESYSTEM_VALIDATION=1
    volumes:
      - splunk_var:/opt/splunk/var
      - splunk_etc:/opt/splunk/etc
    networks:
      - gogs_network
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    restart: unless-stopped
    env_file:
      - .env
    user: 0:0
    volumes:
      - ./configs/otel/config.yaml:/etc/otelcol-contrib/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["--config", "/etc/otelcol-contrib/config.yaml"]
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - gogs_network
  nginx:
    image: nginx:1.27.5-alpine-otel
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/gogs.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - gogs1
      - gogs2
    networks:
      - gogs_network
  gogs1:
    image: 416929699302.dkr.ecr.us-east-1.amazonaws.com/gogs/images:latest
    container_name: gogs-1
    restart: unless-stopped
    expose:
      - "22"
      - "3000"
    ports:
      - "22:22"
    env_file:
      - .env
    volumes:
      - ./data/gogs:/data
    depends_on:
      - db
    networks:
      - gogs_network
  gogs2:
    image: 416929699302.dkr.ecr.us-east-1.amazonaws.com/gogs/images:latest
    container_name: gogs-2
    restart: unless-stopped
    expose:
      - "3000"
    env_file:
      - .env
    volumes:
      - ./data/gogs:/data
    depends_on:
      - db
    networks:
      - gogs_network
  db:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./data/psql:/var/lib/postgresql/data
    networks:
      - gogs_network
networks:
  gogs_network:
    driver: bridge
volumes:
  splunk_var:
  splunk_etc:
